Name: 移车助手
Desc: "描述：帮助用户处理移车业务，临时车牌等问题\n示例：申请移车、临时车、临时牌"
SLOTs:
- name: 浙江燃油车车牌颜色
  desc: "判断车牌的颜色，如蓝色、黄色、临时车牌；\n如果车牌的颜色不是蓝色、黄色、临时车牌，则需要追问澄清"
  type: string
- name: 车牌号
  desc: "请按照如下规则进行信息提取：\n未挂牌或临时牌：车牌号为临时车牌或者没有挂牌，如我是临时牌照；\n外地车牌：车牌名称为非“浙”开头的省份缩写+数字/字母，如沪A123456；\n\
    浙江燃油车：车牌名称为“浙”+字母数字6位，如浙A12345、浙A12335；\n浙江新能源车：车牌名称为“浙”+字母数字7位，如浙B123456、浙B123356；"
  type: string
- name: 二次车牌号收集
  desc: "获取<当前用户输入>车牌号。\n(1) 判断<当前用户输入>有没有输入，忽略历史会话\n(2) 如果<当前用户输入>有输入，提取<当前用户输入>中说明的参数取值\n\
    (3) 如果<当前用户输入>没有输入，匹配 [必填参数没有取值] 这个分支, 则将“二次车牌号收集”的<参数取值>设置为空\"\"。"
  type: string
- name: 车辆停放位置
  desc: "搜集车辆停放位置，搜集格式为xx市xx区。如果用户提供了其他位置信息，仅提取其中的xx市xx区信息。\n用户未明确说明xx市xx区时，车辆停放位置取值默认为空\"\
    \""
  type: string
- name: 移车原因
  desc: 获取移车原因，用户未明确说明时，移车原因取值默认为空""
  type: string
- name: 车牌号是否正确
  desc: "确认用户提供的车牌号是否正确；\n示例：正确、不正确；"
  type: string
- name: 浙江新能源车车牌颜色
  desc: "判断车牌的颜色，如绿色、黄色、临时车牌；\n如果车牌的颜色不是绿色、黄色、临时车牌，则需要追问澄清"
  type: string
- name: 是否二次确认新能源车颜色
  desc: "是或否。\n(1) 判断<当前用户输入>有没有输入，忽略历史会话\n(2) 如果<当前用户输入>有输入，如是、是的、对的、确认、不是、否、不对，匹配\
    \ [必填参数有取值] 这个分支，提取<当前用户输入>中说明的参数取值\n(3) 如果<当前用户输入>没有输入，匹配 [必填参数没有取值] 这个分支, 则将“是否二次确认新能源车颜色”的<参数取值>设置为空\"\
    \"。"
  type: string
- name: 是否二次确认燃油车颜色
  desc: "是或否。\n(1) 判断<当前用户输入>有没有输入，忽略历史会话\n(2) 如果<当前用户输入>有输入，如是、是的、对的、确认、不是、否、不对，匹配\
    \ [必填参数有取值] 这个分支，提取<当前用户输入>中说明的参数取值\n(3) 如果<当前用户输入>没有输入，匹配 [必填参数没有取值] 这个分支, 则将“是否二次确认新能源车颜色”的<参数取值>设置为空\"\
    \"。"
  type: string
- name: 是否二次确认新能源车颜色
  desc: "是或否。\n(1) 判断<当前用户输入>有没有输入，忽略历史会话\n(2) 如果<当前用户输入>有输入，如是、是的、对的、确认、不是、否、不对，匹配\
    \ [必填参数有取值] 这个分支，提取<当前用户输入>中说明的参数取值\n(3) 如果<当前用户输入>没有输入，匹配 [必填参数没有取值] 这个分支, 则将“是否二次确认新能源车颜色”的<参数取值>设置为空\"\
    \"。"
  type: string
- name: 是否二次确认燃油车颜色
  desc: "是或否。\n(1) 判断<当前用户输入>有没有输入，忽略历史会话\n(2) 如果<当前用户输入>有输入，如是、是的、对的、确认、不是、否、不对，匹配\
    \ [必填参数有取值] 这个分支，提取<当前用户输入>中说明的参数取值\n(3) 如果<当前用户输入>没有输入，匹配 [必填参数没有取值] 这个分支, 则将“是否二次确认新能源车颜色”的<参数取值>设置为空\"\
    \"。"
  type: string
APIs:
- name: 代码1
  desc: ''
  precondition: null
- name: 代码2
  desc: ''
  precondition: null
- name: 代码3
  desc: ''
  precondition: null
ANSWERs:
- name: 外地车牌
  desc: 不好意思，目前仅提供浙江正式车牌移车服务，请您通过其他途径解决，祝您生活愉快，再见。
- name: 否定意图的兜底回复
  desc: 正在为您转接人工坐席，请稍等
- name: 结束回复1
  desc: 正在为您转接人工坐席，请稍等
- name: 信息搜集成功
  desc: 好的，您反馈的在{{weizhi}} 且车牌号为{{chepaihao}} 因{{yicheyuanyin}} 申请移车，我们马上为您联系车主，稍后通知您移车结果，请保持手机畅通，祝您愉快，再见！
- name: 位置获取失败
  desc: 正在为您转接人工坐席，请稍等
- name: 移车原因获取失败
  desc: 正在为您转接人工坐席，请稍等
- name: 其他情况
  desc: 正在为您转接人工坐席，请稍等
Procedure: "\n# 开始节点\nwhile True:\n    [车牌号] = API.搜集车牌号()\n    [车牌号是否正确] = API.车牌号确认([车牌号])\n\
  \n    if 车牌号是否正确 in ['正确']:\n        break\n    [二次车牌号] = API.二次搜集车牌号()\n\n# 执行代码1节点\n\
  [最终车牌号] = API.代码1([车牌号, 二次车牌号])\n\n# 条件判断1节点\nif 最终车牌号 in ['外地车牌']:\n    ANSWER.外地车牌()\n\
  elif 最终车牌号 in ['浙江燃油车']:\n    [浙江燃油车车牌颜色] = API.浙江燃油车车牌颜色()\n\n    # 浙江燃油车车牌颜色判断节点\n\
  \    if 浙江燃油车车牌颜色 == '蓝色':\n        [是否二次确认蓝牌燃油车颜色] = API.确认是否为蓝牌燃油车()\n       \
  \ \n        # 判断确认是否为蓝牌燃油车\n        if 是否二次确认蓝牌燃油车颜色 == '是':\n            [车辆停放位置]\
  \ = API.获取车辆停放位置()\n            \n            # 判断车辆停放位置\n            if 车辆停放位置\
  \ is not None:\n                [移车原因] = API.获取移车原因()\n                \n      \
  \          # 判断移车原因\n                if 移车原因 is not None:\n                    [信息搜集成功]\
  \ = API.信息搜集成功([车辆停放位置, 最终车牌号, 移车原因])\n                else:\n                 \
  \   ANSWER.移车原因获取失败()\n            else:\n                ANSWER.位置获取失败()\n    \
  \    else:\n            ANSWER.结束回复1()\n    elif 浙江燃油车车牌颜色 == '黄色':\n        [是否二次确认黄牌燃油车颜色]\
  \ = API.确认是否为黄牌燃油车()\n        \n        # 判断确认是否为黄牌燃油车\n        if 是否二次确认黄牌燃油车颜色\
  \ == '是':\n            [车辆停放位置] = API.获取车辆停放位置()\n            \n            # 判断车辆停放位置\n\
  \            if 车辆停放位置 is not None:\n                [移车原因] = API.获取移车原因()\n   \
  \             \n                # 判断移车原因\n                if 移车原因 is not None:\n\
  \                    [信息搜集成功] = API.信息搜集成功([车辆停放位置, 最终车牌号, 移车原因])\n            \
  \    else:\n                    ANSWER.移车原因获取失败()\n            else:\n         \
  \       ANSWER.位置获取失败()\n        else:\n            ANSWER.结束回复1()\n    else:\n\
  \        ANSWER.其他情况()\n    \nelif 最终车牌号 in ['浙江新能源车']:\n    [浙江新能源车车牌颜色] = API.浙江新能源车车牌颜色()\n\
  \n    # 浙江新能源车车牌颜色判断节点\n    if 浙江新能源车车牌颜色 == '黄色':\n        [是否二次确认黄色新能源车颜色] = API.确认是否为黄色新能源车()\n\
  \        \n        # 判断确认是否为黄色新能源车\n        if 是否二次确认黄色新能源车颜色 == '是':\n        \
  \    [车辆停放位置] = API.获取车辆停放位置()\n            \n            # 判断车辆停放位置\n         \
  \   if 车辆停放位置 is not None:\n                [移车原因] = API.获取移车原因()\n            \
  \    \n                # 判断移车原因\n                if 移车原因 is not None:\n        \
  \            [信息搜集成功] = API.信息搜集成功([车辆停放位置, 最终车牌号, 移车原因])\n                else:\n\
  \                    ANSWER.移车原因获取失败()\n            else:\n                ANSWER.位置获取失败()\n\
  \        else:\n            ANSWER.结束回复1()\n    elif 浙江新能源车车牌颜色 == '绿色':\n     \
  \   [是否二次确认绿色新能源车颜色] = API.确认是否为绿色新能源车()\n        \n        # 判断确认是否为绿色新能源车\n  \
  \      if 是否二次确认绿色新能源车颜色 == '是':\n            [车辆停放位置] = API.获取车辆停放位置()\n      \
  \      \n            # 判断车辆停放位置\n            if 车辆停放位置 is not None:\n          \
  \      [移车原因] = API.获取移车原因()\n                \n                # 判断移车原因\n     \
  \           if 移车原因 is not None:\n                    [信息搜集成功] = API.信息搜集成功([车辆停放位置,\
  \ 最终车牌号, 移车原因])\n                else:\n                    ANSWER.移车原因获取失败()\n\
  \            else:\n                ANSWER.位置获取失败()\n        else:\n           \
  \ ANSWER.结束回复1()\n    else:\n        ANSWER.其他情况()\nelse:\n    ANSWER.否定意图的兜底回复()"
